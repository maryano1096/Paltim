{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marya\\\\paltimsalestool\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Range } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"https://localhost/phprest/paltimapi.php\",\n      api: \"\",\n      room1: false,\n      room2: false,\n      room3: false,\n      room4: false,\n      building1: false,\n      building2: false,\n      floor0: false,\n      floor1: false,\n      floor2: false,\n      floor3: false,\n      floor4: false,\n      floor5: false,\n      floor6: false,\n      bathroom1: false,\n      bathroom2: false,\n      forsale: false,\n      sold: false,\n      currentPage: 1,\n      postsPerPage: 5,\n      modalinfo: [],\n      showmodal: false,\n      show: false,\n      sliderValues: [0, 100],\n      pageNumber: 1,\n      postsPerPage: 10,\n      totalposts: 123\n    };\n    this.callApi = this.callApi.bind(this);\n  } //Call API\n\n\n  callApi() {\n    fetch(this.state.url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"all\",\n        room1: \"da\"\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(res => this.setState({\n      api: res\n    }));\n  }\n\n  componentDidMount() {\n    this.callApi();\n  }\n\n  handleCheckboxChange(e) {\n    this.setState({\n      [e.target.name]: e.target.checked\n    }, () => {\n      this.sendRequest();\n    });\n  }\n\n  handleSlider(sliderValues) {\n    this.setState({\n      sliderValues\n    }, () => {\n      this.sendRequest();\n    });\n  }\n\n  async sendRequest() {\n    await fetch(this.state.url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"sort\",\n        room1: this.state.room1,\n        room2: this.state.room2,\n        room3: this.state.room3,\n        room4: this.state.room4,\n        building1: this.state.building1,\n        building2: this.state.building2,\n        floor0: this.state.floor0,\n        floor1: this.state.floor1,\n        floor2: this.state.floor2,\n        floor3: this.state.floor3,\n        floor4: this.state.floor4,\n        floor5: this.state.floor5,\n        floor6: this.state.floor6,\n        bathroom1: this.state.bathroom1,\n        bathroom2: this.state.bathroom2,\n        surface1: this.state.sliderValues[0],\n        surface2: this.state.sliderValues[1],\n        forsale: this.state.forsale,\n        sold: this.state.sold,\n        pageNumber: this.state.pageNumber,\n        postsPerPage: this.state.postsPerPage\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(res => this.setState({\n      api: res\n    }));\n  }\n\n  paginate(pageNumber) {\n    this.setState({\n      currentPage: pageNumber\n    });\n  }\n\n  render() {\n    if (this.state.api !== \"\") {\n      let pageNumbers = [];\n      const indexOfLastPost = this.state.pageNumber * this.state.postsPerPage;\n      const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\n      const currentPost = this.state.api.slice(indexOfFirstPost, indexOfLastPost);\n\n      for (let i = 1; i <= Math.ceil(this.state.api.length / this.state.postsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      const handleClose = () => {\n        this.setState({\n          show: false\n        });\n      };\n\n      const handleShow = () => {\n        this.setState({\n          show: true\n        });\n      };\n\n      const rowEvents = {\n        onClick: (e, row, rowIndex) => {\n          if (row.STATUS === \"FOR SALE\") {\n            this.setState({\n              modalinfo: row\n            });\n            toggleTrueFalse();\n          }\n        }\n      };\n\n      const toggleTrueFalse = () => {\n        handleShow();\n      };\n\n      const ModalContent = () => {\n        return /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: this.state.modalinfo.APPCODE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://picsum.photos/200/300\",\n                    alt: \"nothing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"modalth6\",\n                    children: [\"Surface : \", this.state.modalinfo.SURFACE]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Building : \", this.state.modalinfo.BUILDING]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Floor : \", this.state.modalinfo.LEVEL]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Number of rooms : \", this.state.modalinfo.ROOMS]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: [\"Bathrooms : \", this.state.modalinfo.BATHROOMS]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"modalbh6\",\n                    children: [\"Terrace : \", this.state.modalinfo.TERRACE]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this);\n      };\n\n      const columns = [{\n        dataField: \"BUILDING\",\n        text: \"BUILDING\"\n      }, {\n        dataField: \"APPCODE\",\n        text: \"APPCODE\"\n      }, {\n        dataField: \"ROOMS\",\n        text: \"ROOMS\"\n      }, {\n        dataField: \"BATHROOMS\",\n        text: \"BATHROOMS\"\n      }, {\n        dataField: \"LEVEL\",\n        text: \"FLOOR\"\n      }, {\n        dataField: \"SURFACE\",\n        text: \"SURFACE\"\n      }, {\n        dataField: \"TERRACE\",\n        text: \"TERRACE\"\n      }, {\n        dataField: \"ORIENTATION\",\n        text: \"ORIENTATION\"\n      }, {\n        dataField: \"STATUS\",\n        text: \"STATUS\"\n      }];\n      let bathrooms = [null, 0, 0];\n      let bathroomsnumbers = [\"1\", \"2\"];\n      let forsale = 0;\n      let floors = [0, 0, 0, 0, 0, 0, 0];\n      let floornumbers = [\"L1\", \"L2\", \"L3\", \"L4\", \"L5\", \"L6\", \"L6\"];\n      let buildings = [0, 0];\n      let rooms = [null, 0, 0, 0, 0];\n      let roomnumbers = [\"1\", \"2\", \"3\", \"4\"];\n\n      for (let i = 0; i < this.state.api.length; ++i) {\n        if (roomnumbers.includes(this.state.api[i].ROOMS) && this.state.api[i].STATUS === \"FOR SALE\") {\n          ++rooms[this.state.api[i].ROOMS - 0];\n        }\n\n        if (this.state.api[i].BUILDING === \"C1\" && this.state.api[i].STATUS === \"FOR SALE\") {\n          ++buildings[0];\n        }\n\n        if (this.state.api[i].BUILDING === \"C2\" && this.state.api[i].STATUS === \"FOR SALE\") {\n          ++buildings[1];\n        }\n\n        if (floornumbers.includes(this.state.api[i].LEVEL) && this.state.api[i].STATUS === \"FOR SALE\") {\n          ++floors[this.state.api[i].LEVEL - 0];\n        }\n\n        if (bathroomsnumbers.includes(this.state.api[i].BATHROOMS) && this.state.api[i].STATUS === \"FOR SALE\") {\n          ++bathrooms[this.state.api[i].BATHROOMS - 0];\n        }\n\n        if (this.state.api[i].STATUS === \"FOR SALE\") {\n          ++forsale;\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-xxl\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: \"Filters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Number of rooms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), roomnumbers.map(room => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      name: \"room\" + room,\n                      onChange: this.handleCheckboxChange.bind(this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\" \", room, \" Room ---- Available : \", rooms[room]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this)]\n                  }, room, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Building\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"building1\",\n                    onChange: this.handleCheckboxChange.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" Building C1 ---- Available : \", buildings[0]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"building2\",\n                    onChange: this.handleCheckboxChange.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" Building C2 ---- Available : \", buildings[1]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    style: {\n                      marginLeft: \"-15px\"\n                    },\n                    children: \"Floor Level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"\",\n                    style: {\n                      marginLeft: \"-15px\"\n                    },\n                    children: floornumbers.map(floor => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          name: \"floor\" + floor,\n                          onChange: this.handleCheckboxChange.bind(this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          children: [\" \", \"Floor \", floor, \" ---- Available : \", floors[floor]]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 279,\n                          columnNumber: 29\n                        }, this)]\n                      }, floor, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 27\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Bathrooms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), bathroomsnumbers.map(bathroom => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      name: \"bathroom\" + bathroom,\n                      onChange: this.handleCheckboxChange.bind(this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\" \", \"Bathroom \", bathroom, \" ---- Available :\", \" \", bathrooms[bathroom]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this)]\n                  }, bathroom, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Surface\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [this.state.sliderValues[0], \"-\", this.state.sliderValues[1]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Range, {\n                  min: 0,\n                  max: 100,\n                  onChange: this.handleSlider.bind(this),\n                  defaultValue: this.state.sliderValues\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"forsale\",\n                    onChange: this.handleCheckboxChange.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\" For Sale ---- Available : \", forsale]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"sold\",\n                    onChange: this.handleCheckboxChange.bind(this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \" Sold\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n              \"aria-label\": \"...\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                class: \"pagination pagination-lg\",\n                children: pageNumbers.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    class: \"page-item\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      class: \"page-link\",\n                      href: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n              className: \"da\",\n              keyField: \"ID\",\n              data: this.state.api,\n              columns: columns,\n              rowEvents: rowEvents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), this.state.show ? /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 34\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fetching data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/marya/paltimsalestool/src/App.js"],"names":["React","BootstrapTable","Modal","Button","Range","Table","Component","constructor","props","state","url","api","room1","room2","room3","room4","building1","building2","floor0","floor1","floor2","floor3","floor4","floor5","floor6","bathroom1","bathroom2","forsale","sold","currentPage","postsPerPage","modalinfo","showmodal","show","sliderValues","pageNumber","totalposts","callApi","bind","fetch","method","body","JSON","stringify","type","headers","then","res","json","setState","componentDidMount","handleCheckboxChange","e","target","name","checked","sendRequest","handleSlider","surface1","surface2","paginate","render","pageNumbers","indexOfLastPost","indexOfFirstPost","currentPost","slice","i","Math","ceil","length","push","handleClose","handleShow","rowEvents","onClick","row","rowIndex","STATUS","toggleTrueFalse","ModalContent","APPCODE","SURFACE","BUILDING","LEVEL","ROOMS","BATHROOMS","TERRACE","columns","dataField","text","bathrooms","bathroomsnumbers","floors","floornumbers","buildings","rooms","roomnumbers","includes","map","room","marginLeft","floor","bathroom","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Range } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"https://localhost/phprest/paltimapi.php\",\n      api: \"\",\n      room1: false,\n      room2: false,\n      room3: false,\n      room4: false,\n      building1: false,\n      building2: false,\n      floor0: false,\n      floor1: false,\n      floor2: false,\n      floor3: false,\n      floor4: false,\n      floor5: false,\n      floor6: false,\n      bathroom1: false,\n      bathroom2: false,\n      forsale: false,\n      sold: false,\n      currentPage: 1,\n      postsPerPage: 5,\n      modalinfo: [],\n      showmodal: false,\n      show: false,\n      sliderValues: [0, 100],\n      pageNumber: 1,\n      postsPerPage:10,\n      totalposts:123,\n    };\n\n    this.callApi = this.callApi.bind(this);\n  }\n  //Call API\n  callApi() {\n    fetch(this.state.url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"all\",\n        room1: \"da\",\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => this.setState({ api: res }));\n  }\n  componentDidMount() {\n    this.callApi();\n  }\n  handleCheckboxChange(e) {\n    this.setState({ [e.target.name]: e.target.checked }, () => {\n      this.sendRequest();\n    });\n  }\n  handleSlider(sliderValues) {\n    this.setState({ sliderValues }, () => {\n      this.sendRequest();\n    });\n  }\n  async sendRequest() {\n    await fetch(this.state.url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        type: \"sort\",\n        room1: this.state.room1,\n        room2: this.state.room2,\n        room3: this.state.room3,\n        room4: this.state.room4,\n        building1: this.state.building1,\n        building2: this.state.building2,\n        floor0: this.state.floor0,\n        floor1: this.state.floor1,\n        floor2: this.state.floor2,\n        floor3: this.state.floor3,\n        floor4: this.state.floor4,\n        floor5: this.state.floor5,\n        floor6: this.state.floor6,\n        bathroom1: this.state.bathroom1,\n        bathroom2: this.state.bathroom2,\n        surface1: this.state.sliderValues[0],\n        surface2: this.state.sliderValues[1],\n        forsale: this.state.forsale,\n        sold: this.state.sold,\n        pageNumber: this.state.pageNumber,\n        postsPerPage: this.state.postsPerPage\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => this.setState({ api: res }));\n  }\n  paginate(pageNumber) {\n    this.setState({ currentPage: pageNumber });\n  }\n\n  render() {\n    if (this.state.api !== \"\") {\n      let pageNumbers = [];\n      const indexOfLastPost = this.state.pageNumber * this.state.postsPerPage;\n      const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\n      const currentPost = this.state.api.slice(\n        indexOfFirstPost,\n        indexOfLastPost\n      );\n      for (let i = 1;  i <= Math.ceil(this.state.api.length / this.state.postsPerPage);i++) {\n          pageNumbers.push(i);\n      }\n\n      const handleClose = () => {\n        this.setState({ show: false });\n      };\n      const handleShow = () => {\n        this.setState({ show: true });\n      };\n      const rowEvents = {\n        onClick: (e, row, rowIndex) => {\n          if (row.STATUS === \"FOR SALE\") {\n            this.setState({ modalinfo: row });\n            toggleTrueFalse();\n          }\n        },\n      };\n      const toggleTrueFalse = () => {\n        handleShow();\n      };\n\n      const ModalContent = () => {\n        return (\n          <Modal show={this.state.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>{this.state.modalinfo.APPCODE}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <img\n                      src=\"https://picsum.photos/200/300\"\n                      alt=\"nothing\"\n                    ></img>\n                  </div>\n                  <div className=\"col\">\n                    <hr></hr>\n                    <h6 className=\"modalth6\">\n                      Surface : {this.state.modalinfo.SURFACE}\n                    </h6>\n                    <h6>Building : {this.state.modalinfo.BUILDING}</h6>\n                    <h6>Floor : {this.state.modalinfo.LEVEL}</h6>\n                    <h6>Number of rooms : {this.state.modalinfo.ROOMS}</h6>\n                    <h6>Bathrooms : {this.state.modalinfo.BATHROOMS}</h6>\n                    <h6 className=\"modalbh6\">\n                      Terrace : {this.state.modalinfo.TERRACE}\n                    </h6>\n                    <hr></hr>\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        );\n      };\n      const columns = [\n        { dataField: \"BUILDING\", text: \"BUILDING\" },\n        { dataField: \"APPCODE\", text: \"APPCODE\" },\n        { dataField: \"ROOMS\", text: \"ROOMS\" },\n        { dataField: \"BATHROOMS\", text: \"BATHROOMS\" },\n        { dataField: \"LEVEL\", text: \"FLOOR\" },\n        { dataField: \"SURFACE\", text: \"SURFACE\" },\n        { dataField: \"TERRACE\", text: \"TERRACE\" },\n        { dataField: \"ORIENTATION\", text: \"ORIENTATION\" },\n        { dataField: \"STATUS\", text: \"STATUS\" },\n      ];\n      let bathrooms = [null, 0, 0];\n      let bathroomsnumbers = [\"1\", \"2\"];\n      let forsale = 0;\n      let floors = [0, 0, 0, 0, 0, 0, 0];\n      let floornumbers = [\"L1\", \"L2\", \"L3\", \"L4\", \"L5\", \"L6\", \"L6\"];\n      let buildings = [0, 0];\n      let rooms = [null, 0, 0, 0, 0];\n      let roomnumbers = [\"1\", \"2\", \"3\", \"4\"];\n      for (let i = 0; i < this.state.api.length; ++i) {\n        if (roomnumbers.includes(this.state.api[i].ROOMS) && this.state.api[i].STATUS === \"FOR SALE\"\n        ) {\n          ++rooms[this.state.api[i].ROOMS - 0];\n        }\n        if (this.state.api[i].BUILDING === \"C1\" && this.state.api[i].STATUS === \"FOR SALE\"\n        ) {\n          ++buildings[0];\n        }\n        if ( this.state.api[i].BUILDING === \"C2\" && this.state.api[i].STATUS === \"FOR SALE\"\n        ) {\n          ++buildings[1];\n        }\n        if (floornumbers.includes(this.state.api[i].LEVEL) && this.state.api[i].STATUS === \"FOR SALE\"\n        ) {\n          ++floors[this.state.api[i].LEVEL - 0];\n        }\n        if (bathroomsnumbers.includes(this.state.api[i].BATHROOMS) && this.state.api[i].STATUS === \"FOR SALE\"\n        ) {\n          ++bathrooms[this.state.api[i].BATHROOMS - 0];\n        }\n        if (this.state.api[i].STATUS === \"FOR SALE\") {\n          ++forsale;\n        }\n      }\n\n      return (\n        <div className=\"container-xxl\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">Filters</h5>\n                  <h6>Number of rooms</h6>\n                  {roomnumbers.map((room) => {\n                    return (\n                      <div key={room}>\n                        <input\n                          type=\"checkbox\"\n                          name={\"room\" + room}\n                          onChange={this.handleCheckboxChange.bind(this)}\n                        ></input>\n                        <label>\n                          {\" \"}\n                          {room} Room ---- Available : {rooms[room]}\n                        </label>\n                      </div>\n                    );\n                  })}\n                  <hr></hr>\n                  <h6>Building</h6>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      name=\"building1\"\n                      onChange={this.handleCheckboxChange.bind(this)}\n                    ></input>\n                    <label> Building C1 ---- Available : {buildings[0]}</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      name=\"building2\"\n                      onChange={this.handleCheckboxChange.bind(this)}\n                    ></input>\n                    <label> Building C2 ---- Available : {buildings[1]}</label>\n                  </div>\n                  <hr></hr>\n                  <div className=\"container\">\n                    <h6 style={{ marginLeft: \"-15px\" }}>Floor Level</h6>\n                    <div className=\"\" style={{ marginLeft: \"-15px\" }}>\n                      {floornumbers.map((floor) => {\n                        return (\n                          <div key={floor}>\n                            <input\n                              type=\"checkbox\"\n                              name={\"floor\" + floor}\n                              onChange={this.handleCheckboxChange.bind(this)}\n                            ></input>\n                            <label>\n                              {\" \"}\n                              Floor {floor} ---- Available : {floors[floor]}\n                            </label>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  <hr></hr>\n                  <h6>Bathrooms</h6>\n                  {bathroomsnumbers.map((bathroom) => {\n                    return (\n                      <div key={bathroom}>\n                        <input\n                          type=\"checkbox\"\n                          name={\"bathroom\" + bathroom}\n                          onChange={this.handleCheckboxChange.bind(this)}\n                        ></input>\n                        <label>\n                          {\" \"}\n                          Bathroom {bathroom} ---- Available :{\" \"}\n                          {bathrooms[bathroom]}\n                        </label>\n                      </div>\n                    );\n                  })}\n                  <hr></hr>\n                  <h6>Surface</h6>\n                  <p>\n                    {this.state.sliderValues[0]}-{this.state.sliderValues[1]}\n                  </p>\n                  <Range\n                    min={0}\n                    max={100}\n                    onChange={this.handleSlider.bind(this)}\n                    defaultValue={this.state.sliderValues}\n                  ></Range>\n                  <hr></hr>\n                  <h6>Status</h6>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      name=\"forsale\"\n                      onChange={this.handleCheckboxChange.bind(this)}\n                    ></input>\n                    <label> For Sale ---- Available : {forsale}</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      name=\"sold\"\n                      onChange={this.handleCheckboxChange.bind(this)}\n                    ></input>\n                    <label> Sold</label>\n                  </div>\n                </div>\n              </div>\n              <nav aria-label=\"...\">\n                <ul class=\"pagination pagination-lg\">\n                  {pageNumbers.map((item) => {\n                    return (\n                    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">{}</a></li>\n                    )\n                  })}\n                  \n                </ul>\n              </nav>\n            </div>\n            <div className=\"col\">\n              <BootstrapTable\n                className=\"da\"\n                keyField=\"ID\"\n                data={this.state.api}\n                columns={columns}\n                \n                rowEvents={rowEvents}\n              />\n              {this.state.show ? <ModalContent /> : null}\n            </div>\n            \n          </div>\n          \n        </div>\n      );\n    } else {\n      return <div>Fetching data</div>;\n    }\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}