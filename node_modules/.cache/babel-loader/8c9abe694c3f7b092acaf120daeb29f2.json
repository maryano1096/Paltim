{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marya\\\\paltimsalestool\\\\src\\\\languageSelect.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageMap = {\n  en: {\n    label: \"English\",\n    dir: \"ltr\",\n    active: true\n  },\n  ro: {\n    label: \"Romana\",\n    dir: \"ltr\",\n    active: false\n  }\n};\n\nconst LanguageSelect = props => {\n  _s();\n\n  var _Object$keys;\n\n  const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\n  const [menuAnchor, setMenuAnchor] = React.useState(null);\n  const [data, setData] = React.useState('');\n  React.useEffect(() => {\n    document.body.dir = languageMap[selected].dir;\n  }, [menuAnchor, selected]);\n\n  const parentToChild = () => {\n    setData(\"This is data from Parent Component to the Child Component.\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-select\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: (({\n        currentTarget\n      }) => setMenuAnchor(currentTarget), parentToChild()),\n      children: [languageMap[selected].label, /*#__PURE__*/_jsxDEV(ArrowDropDown, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      open: !!menuAnchor,\n      anchorEl: menuAnchor,\n      onClose: () => setMenuAnchor(null),\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: (_Object$keys = Object.keys(languageMap)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => {\n              i18next.changeLanguage(item);\n              setMenuAnchor(null);\n            },\n            children: languageMap[item].label\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageSelect, \"gcX8oNGdeCIRx+FTwq/ZmQ4bwGE=\");\n\n_c = LanguageSelect;\nexport default LanguageSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelect\");","map":{"version":3,"sources":["C:/Users/marya/paltimsalestool/src/languageSelect.js"],"names":["React","useTranslation","i18next","ArrowDropDown","Button","Popover","List","ListItem","languageMap","en","label","dir","active","ro","LanguageSelect","props","selected","localStorage","getItem","menuAnchor","setMenuAnchor","useState","data","setData","useEffect","document","body","parentToChild","currentTarget","vertical","horizontal","Object","keys","map","item","changeLanguage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\n\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst languageMap = {\r\n  en: { label: \"English\", dir: \"ltr\", active: true },\r\n  ro: { label: \"Romana\", dir: \"ltr\", active: false }\r\n};\r\n\r\nconst LanguageSelect = (props) => {\r\n  const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\r\n\r\n  const [menuAnchor, setMenuAnchor] = React.useState(null);\r\n  const [data, setData] = React.useState('');\r\n  React.useEffect(() => {\r\n    document.body.dir = languageMap[selected].dir;\r\n  }, [menuAnchor, selected]);\r\n  const parentToChild = () => {\r\n    setData(\"This is data from Parent Component to the Child Component.\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"language-select\">\r\n      <Button onClick={({ currentTarget }) => setMenuAnchor(currentTarget),parentToChild() } >\r\n        {languageMap[selected].label}\r\n        <ArrowDropDown fontSize=\"small\" />\r\n      </Button>\r\n      <Popover\r\n        open={!!menuAnchor}\r\n        anchorEl={menuAnchor}\r\n        onClose={() => setMenuAnchor(null)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n      >\r\n        <div>\r\n          <List>\r\n            {Object.keys(languageMap)?.map(item => (\r\n              <ListItem\r\n                button\r\n                key={item}\r\n                onClick={() => {\r\n                  i18next.changeLanguage(item);\r\n                  setMenuAnchor(null);\r\n                }}\r\n              >\r\n                {languageMap[item].label}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelect;\r\n"]},"metadata":{},"sourceType":"module"}