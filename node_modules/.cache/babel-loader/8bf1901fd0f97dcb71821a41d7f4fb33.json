{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marya\\\\paltimsalestool\\\\src\\\\language.js\";\nimport React from \"react\";\nimport i18next from \"i18next\";\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LanguageSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuAnchor: \"\"\n    };\n  }\n\n  render() {\n    var _Object$keys;\n\n    const languageMap = {\n      en: {\n        label: \"English\",\n        dir: \"ltr\",\n        active: true\n      },\n      ro: {\n        label: \"Romana\",\n        dir: \"ltr\",\n        active: false\n      }\n    };\n    const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\n    React.useEffect(() => {\n      document.body.dir = languageMap[selected].dir;\n    }, [this.state.menuAnchor, selected]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-select\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.setState({\n          menuAnchor: currentTarget\n        }),\n        children: [languageMap[selected].label, /*#__PURE__*/_jsxDEV(ArrowDropDown, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        open: !!menuAnchor,\n        anchorEl: menuAnchor,\n        onClose: () => setMenuAnchor(null),\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        },\n        transformOrigin: {\n          vertical: \"top\",\n          horizontal: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: (_Object$keys = Object.keys(languageMap)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              onClick: () => {\n                i18next.changeLanguage(item);\n                setMenuAnchor(null);\n              },\n              children: languageMap[item].label\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LanguageSelect;","map":{"version":3,"sources":["C:/Users/marya/paltimsalestool/src/language.js"],"names":["React","i18next","ArrowDropDown","Button","Popover","List","ListItem","LanguageSelect","Component","constructor","props","state","menuAnchor","render","languageMap","en","label","dir","active","ro","selected","localStorage","getItem","useEffect","document","body","setState","currentTarget","setMenuAnchor","vertical","horizontal","Object","keys","map","item","changeLanguage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAIA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAC;AADF,KAAb;AAGH;;AACDC,EAAAA,MAAM,GAAE;AAAA;;AACR,UAAMC,WAAW,GAAG;AAChBC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,GAAG,EAAE,KAAzB;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OADY;AAEhBC,MAAAA,EAAE,EAAE;AAAEH,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,GAAG,EAAE,KAAxB;AAA+BC,QAAAA,MAAM,EAAE;AAAvC;AAFY,KAApB;AAIA,UAAME,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAAvD;AAEAtB,IAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AAClBC,MAAAA,QAAQ,CAACC,IAAT,CAAcR,GAAd,GAAoBH,WAAW,CAACM,QAAD,CAAX,CAAsBH,GAA1C;AACH,KAFD,EAEG,CAAC,KAAKN,KAAL,CAAWC,UAAZ,EAAwBQ,QAAxB,CAFH;AAII,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKM,QAAL,CAAc;AAACd,UAAAA,UAAU,EAAEe;AAAb,SAAd,CAAjB;AAAA,mBACGb,WAAW,CAACM,QAAD,CAAX,CAAsBJ,KADzB,eAEE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,OAAD;AACE,QAAA,IAAI,EAAE,CAAC,CAACJ,UADV;AAEE,QAAA,QAAQ,EAAEA,UAFZ;AAGE,QAAA,OAAO,EAAE,MAAMgB,aAAa,CAAC,IAAD,CAH9B;AAIE,QAAA,YAAY,EAAE;AACZC,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,UAAU,EAAE;AAFA,SAJhB;AAQE,QAAA,eAAe,EAAE;AACfD,UAAAA,QAAQ,EAAE,KADK;AAEfC,UAAAA,UAAU,EAAE;AAFG,SARnB;AAAA,+BAaE;AAAA,iCACE,QAAC,IAAD;AAAA,sCACGC,MAAM,CAACC,IAAP,CAAYlB,WAAZ,CADH,iDACG,aAA0BmB,GAA1B,CAA8BC,IAAI,iBACjC,QAAC,QAAD;AACE,cAAA,MAAM,MADR;AAGE,cAAA,OAAO,EAAE,MAAM;AACbjC,gBAAAA,OAAO,CAACkC,cAAR,CAAuBD,IAAvB;AACAN,gBAAAA,aAAa,CAAC,IAAD,CAAb;AACD,eANH;AAAA,wBAQGd,WAAW,CAACoB,IAAD,CAAX,CAAkBlB;AARrB,eAEOkB,IAFP;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCC;;AAxDoC;;AA4D7C,eAAe3B,cAAf","sourcesContent":["import React from \"react\";\r\nimport i18next from \"i18next\";\r\n\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n\r\n\r\nclass LanguageSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuAnchor:\"\"\r\n        }\r\n    }\r\n    render(){\r\n    const languageMap = {\r\n        en: { label: \"English\", dir: \"ltr\", active: true },\r\n        ro: { label: \"Romana\", dir: \"ltr\", active: false }\r\n    };\r\n    const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\r\n\r\n    React.useEffect(() => {\r\n        document.body.dir = languageMap[selected].dir;\r\n    }, [this.state.menuAnchor, selected]);\r\n\r\n        return (\r\n            <div className=\"language-select\">\r\n              <Button onClick={this.setState({menuAnchor: currentTarget})}>\r\n                {languageMap[selected].label}\r\n                <ArrowDropDown fontSize=\"small\" />\r\n              </Button>\r\n              <Popover\r\n                open={!!menuAnchor}\r\n                anchorEl={menuAnchor}\r\n                onClose={() => setMenuAnchor(null)}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n              >\r\n                <div>\r\n                  <List>\r\n                    {Object.keys(languageMap)?.map(item => (\r\n                      <ListItem\r\n                        button\r\n                        key={item}\r\n                        onClick={() => {\r\n                          i18next.changeLanguage(item);\r\n                          setMenuAnchor(null);\r\n                        }}\r\n                      >\r\n                        {languageMap[item].label}\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </div>\r\n              </Popover>\r\n            </div>\r\n          );\r\n        };\r\n    }\r\n  \r\n  \r\nexport default LanguageSelect;"]},"metadata":{},"sourceType":"module"}